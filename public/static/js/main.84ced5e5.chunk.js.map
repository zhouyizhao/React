{"version":3,"sources":["ShowTime.js","Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","Request.js","Context/Context.js","Context/Child.js","Context/Parent.js","Hoc/Hoc.js","Portal/Portals.js","Portal/ParentPortal.js","Sider.js","App.js","index.js"],"names":["Component","Todoinput","handleInput","e","keyCode","props","addTodo","target","value","handleChange","setState","todo","state","htmlFor","style","fontSize","id","onChange","this","n1","onKeyDown","type","Todoing","length","map","item","idx","key","onClick","num","boxclick","name","checked","chage","title","tododelet","over","unboxclick","overdelet","Todolist","isTodo","addItem","msg","concat","localStorage","JSON","stringify","splice","done","parse","window","getItem","setItem","i","Request","data","fetch","method","body","then","res","json","result","console","log","index","album_title","author","React","createContext","con","Provider","Consumer","Child","context","contextType","url","hoc","Com","str","A","displayName","getDisplayname","Music","Music1","Mymusic","Mymusic1","Hoc","Portals","cli","ReactDOM","createPortal","children","document","Sider","float","to","render","getElementById"],"mappings":"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","file":"static/js/main.84ced5e5.chunk.js","sourcesContent":["import React,{Component,Fragment} from 'react';\r\n\r\n//类定义组件\r\nexport default class ShowTime extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            time:new Date().toLocaleTimeString()\r\n        }\r\n        //自己写的函数需要用this进行绑定\r\n        // this.handleClick = this.handleClick.bind(this);\r\n        console.log('constructor',this.props.word);\r\n    }\r\n    componentDidMount(){\r\n        console.log('componentDidMount');\r\n        setTimeout(()=>{\r\n            console.log('1');\r\n            this.setState({\r\n                time:new Date().toLocaleTimeString()\r\n            })\r\n        },1000)\r\n    }\r\n    shouldComponentUpdate(){\r\n        return true\r\n    }\r\n    getSnapshotBeforeUpdate(){\r\n        console.log('getsnapshot');\r\n        return ''\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('didupdate');\r\n    }\r\n    handleClick = (num,e)=>{//自己声明的方法\r\n        console.log(num,e);\r\n        console.log('点击成功');\r\n    }\r\n    divClick(num,e){\r\n        console.log(num,e);\r\n        console.log('点击成功');\r\n    }\r\n    render(){\r\n        console.log('render');\r\n        return (\r\n            <Fragment>\r\n                {/* <div onClick = {this.handleClick(1,this)}>{this.state.time}</div> */}\r\n                <div onClick = {(ev) => this.handleClick(1,ev)}>{this.state.time}</div>\r\n                <div onClick ={this.divClick.bind(this,333)}>hello{this.props.word}</div>\r\n            </Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n//默认导出，只能导出一次 \r\n// export default ShowTime;\r\n//命名导出，可写多个，{可以多个，..，}\r\n// export {ShowTime}; //引入import {ShowTime} from './class1';","import React, { Component } from 'react'\r\nimport { directive } from '@babel/types'\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state =  {\r\n            todo:[]\r\n        }\r\n    }\r\n    handleInput = (e) =>{\r\n        if(e.keyCode === 13){\r\n            this.props.addTodo(e.target.value);\r\n        }\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            todo: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\" style={{fontSize:24}}>ToDoList</label>\r\n                <input id=\"inp\" onChange={(e)=>this.handleChange(e)} value={this.state.n1} onKeyDown = {(e)=>this.handleInput(e)} type = \"text\"/>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>正在进行</h1><button>{this.props.todo.length}</button>\r\n                <ul>{\r\n                    this.props.todo.map((item,idx) =>\r\n                        <li key={idx}>\r\n                            <input onClick ={(num)=>this.props.boxclick(idx)} type=\"checkbox\" name={idx} checked={false} onChange = {()=>this.props.chage()}/>\r\n                            {item.title}----\r\n                            <button onClick={(num)=>this.props.tododelet(idx)}>删除</button>\r\n                        </li>\r\n                    )\r\n                }</ul>\r\n                <h1>已经完成</h1><button>{this.props.over.length}</button>\r\n                <ul>{\r\n                    this.props.over.map((item,idx) =>\r\n                        <li key={idx}>\r\n                            <input type=\"checkbox\" onClick ={(num)=>this.props.unboxclick(idx)} checked name={idx} onChange = {()=>this.props.chage()}/>\r\n                            {item.title}----\r\n                            <button onClick={(num)=>this.props.overdelet(idx)}>删除</button>\r\n                        </li>\r\n                    )\r\n                }</ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Todoinput from './Todoinput'\r\nimport Todoing from './Todoing'\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        var isTodo;\r\n        var todo=[];\r\n        var over=[];\r\n        //如果本地存在key值，读取其值，如果没有，读取默认key值，并保存在本地\r\n        if(JSON.parse(window.localStorage.getItem(\"todo\"))){\r\n            isTodo = JSON.parse(window.localStorage.getItem(\"todo\"));\r\n        }else{\r\n            isTodo = [{\"title\":\"1\",\"done\":true},{\"title\":\"2\",\"done\":false},{\"title\":\"3\",\"done\":true}];\r\n            localStorage.setItem(\"todo\", JSON.stringify(isTodo));\r\n        }\r\n        //分开已完成与未完成\r\n        for(var i = 0 ;i<isTodo.length;i++){\r\n            if(isTodo[i].done){\r\n                over = [...over,isTodo[i]];\r\n            }else{\r\n                todo = [...todo,isTodo[i]];\r\n            }\r\n        }\r\n        //将key赋给todo\r\n        this.state = {\r\n            todo : todo,\r\n            over : over\r\n        }\r\n        // console.log(todo);\r\n        // console.log(over);\r\n    }\r\n    addItem = (msg)=>{\r\n        //添加行\r\n        var todo =[...this.state.todo,{\"title\":\"\"+msg,\"done\":false}];\r\n        this.setState({\r\n            //更新值\r\n            todo : todo\r\n        },()=>{\r\n            //连接两个数组\r\n            var isTodo = this.state.todo.concat(this.state.over);\r\n            //同步到本地\r\n            localStorage.todo = JSON.stringify(isTodo);\r\n        })\r\n    }\r\n    tododelet = (num)=>{\r\n        //删除行\r\n        var todo =[...this.state.todo];\r\n        todo.splice(num,1);\r\n        this.setState({\r\n            //更新变化\r\n            todo : todo\r\n        },()=>{\r\n            //连接两个数组\r\n            var isTodo = this.state.todo.concat(this.state.over);\r\n            //在本地记录变化\r\n            localStorage.todo = JSON.stringify(isTodo);\r\n        })\r\n    }\r\n    overdelet = (num)=>{\r\n        //删除行\r\n        var over =[...this.state.over];\r\n        over.splice(num,1);\r\n        this.setState({\r\n            //更新变化\r\n            over : over\r\n        },()=>{\r\n            //连接两个数组\r\n            var isTodo = this.state.todo.concat(this.state.over);\r\n            //在本地记录变化\r\n            localStorage.todo = JSON.stringify(isTodo);\r\n        })\r\n    }\r\n    boxclick = (num)=>{\r\n        this.state.todo[num].done = true;\r\n        var over =[...this.state.over,this.state.todo[num]]\r\n        this.setState({\r\n            over :over\r\n        },()=>{\r\n            var isTodo = this.state.todo.concat(this.state.over);\r\n            localStorage.todo = JSON.stringify(isTodo);\r\n        })\r\n        this.tododelet(num);\r\n    }\r\n    unboxclick = (num)=>{\r\n        this.state.over[num].done = false;\r\n        var todo =[...this.state.todo,this.state.over[num]]\r\n        this.setState({\r\n            todo :todo\r\n        },()=>{\r\n            var isTodo = this.state.todo.concat(this.state.over);\r\n            localStorage.todo = JSON.stringify(isTodo);\r\n        })\r\n        this.overdelet(num);\r\n    }\r\n    chage = ()=>{\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput addTodo = {this.addItem}/>\r\n                <Todoing todo = {this.state.todo} over = {this.state.over}\r\n                    tododelet = {this.tododelet} overdelet = {this.overdelet}\r\n                    chage = {this.chage}\r\n                    boxclick = {this.boxclick} unboxclick = {this.unboxclick}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\n\r\n\r\nexport default class Request extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://api.apiopen.top/musicRankingsDetails?type=1',{\r\n            method:'POST',body:'{name:ming}'\r\n        }).then((res) => {\r\n            return res.json();\r\n          })\r\n          .then((res)=>{\r\n                this.setState({\r\n                    data :res.result\r\n                })\r\n            console.log(res);\r\n          })\r\n        // Axios.get('https://api.apiopen.top/musicRankingsDetails?type=1').then((res)=>{\r\n        //     this.setState({\r\n        //         data :res.data.result\r\n        //     })\r\n        // })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>请求接口</h1>\r\n                <ul>\r\n                    {\r\n                        this.state.data.map(\r\n                            (item,index)=>(\r\n                                <li key ={index}>\r\n                                    <h2>{item.album_title}</h2>\r\n                                    <p>{item.author}</p>\r\n                                </li>\r\n                            )\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport const {Provider,Consumer} = React.createContext();\r\nexport const con = React.createContext();","import React, { Component } from 'react'\r\n// import {Consumer } from './Context'\r\nimport {con} from './Context'\r\n\r\nexport default class Child extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>consumer</h1>\r\n                {this.context}\r\n                {/* <Consumer>\r\n                    {(data) =><div>{data}</div>}\r\n                </Consumer>    */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nChild.contextType = con;","import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\n\r\nexport default class Parent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Child/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nlet url = 'https://api.apiopen.top/musicRankingsDetails?type=1';\r\n\r\n//高阶组件\r\nfunction hoc(Com,url,str){\r\n    class A extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then((res)=>{\r\n                return res.json();\r\n            })\r\n            .then((res)=>{\r\n                this.setState({\r\n                    data: res.result\r\n                })\r\n            })\r\n        }\r\n        render(){\r\n            return (\r\n                <div>\r\n                    <h1>{str}</h1>\r\n                    <Com {...this.props} data={this.state.data} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    // A.displayName = 'A('+getDisplayname(Com)+')';\r\n    A.displayName = `A(${getDisplayname(Com)})`;//模板字符串\r\n    return A;\r\n}\r\n//获取高阶组件的名字\r\nfunction getDisplayname (Com){\r\n    return Com.displayName || Com.name ||'Component';\r\n}\r\nclass Music extends Component{\r\n    render(){\r\n        return <ul>\r\n            <div>{this.props.name}</div>\r\n            {\r\n                this.props.data.map((item,idx)=>{\r\n                    return <li key={idx}>{item.title}</li>\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\nclass Music1 extends Component{\r\n    render(){\r\n        return <ul>\r\n            {\r\n                this.props.data.map((item,idx)=>{\r\n                    return(\r\n                        <div key={idx}>\r\n                            <p>{item.title}</p>\r\n                            <p>{item.author}</p>\r\n                        </div>                        \r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\nvar Mymusic = hoc(Music,url,'第一个');\r\nvar Mymusic1 = hoc(Music1,url,'第二个');\r\n\r\nexport default class Hoc extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Mymusic name = \"aa\"/>\r\n                <Mymusic1/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default class Portals extends Component {\r\n    cli = ()=>{\r\n        console.log('Portals click');\r\n    }\r\n    render() {\r\n        console.log(this);\r\n        return (\r\n            //可以将内容放在页面中任意结构下\r\n            //不局限于被引入时的位置\r\n            // <div> out Portals</div>\r\n            ReactDOM.createPortal(\r\n                <div onClick={this.cli}>{this.props.children}</div>,\r\n                document.body\r\n            )  \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Portals from './Portals'\r\n\r\nexport default class ParentPortal extends Component {\r\n    cli = ()=>{\r\n        console.log('ParentPortal click');\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.cli}>\r\n                {/* <Portals/> */}\r\n                {/* 双标签中的子元素在子组件中可以通过props.children找到*/}\r\n                <Portals><h1>音乐</h1></Portals>\r\n                <Portals><li>列表</li></Portals>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router,Route,Link} from 'react-router-dom'\r\n\r\nexport default class Sider extends Component {\r\n    render() {\r\n        return (\r\n            <ul style ={{float:'left'}}>\r\n                <li><Link to = '/'>Todolist</Link></li>\r\n                <li><Link to = '/hoc'>hoc</Link></li>\r\n                <li><Link to = '/request'>request</Link></li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router,Route,Link} from 'react-router-dom';\r\nimport {Button} from 'antd'\r\n\r\nimport Request from './Request'\r\nimport Hoc from './Hoc/Hoc';\r\nimport Todolist from './Todolist/Todolist'\r\nimport Sider from './Sider';\r\n\r\n//antd使用：\r\n//1、下载安装antd框架：npm i antd\r\n//2、在某个css里引入antd的css：@import '~antd/dist/antd.css';\r\n//3、在需要的组件内import相应的组件，然后使用：import {Button} from 'antd'\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Button type=\"primary\">Primary</Button>\r\n                    <Sider/>\r\n                    <div style ={{margLeft:50,float:'left',border: '2px solid red'}}>\r\n                    <Route exact path='/' component={Todolist}/>\r\n                    <Route path='/hoc' component={Hoc}/>\r\n                    <Route path='/request' component={Request}/>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import React,{Component,Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ShowTime from './ShowTime';\nimport Todolist from './Todolist/Todolist'\nimport Request from './Request'\nimport Parent from './Context/Parent'\nimport {con} from './Context/Context'\nimport Hoc from './Hoc/Hoc';\nimport ParentPortal from './Portal/ParentPortal';\nimport App from './App';\nimport Sider from './Sider';\n\n//todolist\nReactDOM.render(<Todolist/>,document.getElementById('root'));\n\n// App\n// ReactDOM.render(<App/>,document.getElementById('root'));\n\n//Portals\n// ReactDOM.render(<ParentPortal/>,document.getElementById('root'));\n\n//HOC\n// ReactDOM.render(<Hoc/>,document.getElementById('root'));\n\n//Context\n// let color = 'red';\n// ReactDOM.render(\n//     // <Provider value={color}>\n//     //     <Parent/>\n//     // </Provider>\n//     <con.Provider value={color}>\n//         <Parent/>\n//     </con.Provider>\n//     ,document.getElementById('root')\n// );\n\n//组件交互\n//父组件 --> 子组件：调用时在子组件上添加属性\n//在子组件中通过props获取数据\n// ReactDOM.render(\n//     <Request/>,document.getElementById('root')\n// );\n\n//ShowTime.js\n// ReactDOM.render(\n//     <ShowTime/>,document.getElementById('root')\n// );\n\n//函数定义组件及调用（无生命周期函数）\n//当只是渲染结构时\n// function Hello(props){\n//     return (\n//     <div>\n//         {/*条件渲染*/}\n//         {props.list.length>=6?<h1>todo</h1>:''}\n//         {props.list.length>=5 && <h1>todo</h1>}\n//         <ul>\n//             {/*循环渲染*/}\n//             {\n//                 props.list.map((item,index) => index % 2 === 0 && <li key={item}>{item}</li>)\n//             }\n//         </ul>\n//     </div>)\n// }\n// var item = [1,2,3,4,5];\n// ReactDOM.render(\n//     <Hello list={item}/>,document.getElementById('root')\n// );\n\n//react元素创建后不可改变\n// function tick(){\n//     const time = <div>{new Date().toLocaleTimeString()}</div>;\n//     ReactDOM.render(time,document.getElementById('root'));\n// }\n// setInterval(tick,1000);\n\n//以后使用\n// var e = <h1>hello</h1>\n// ReactDOM.render(e,document.getElementById('root'));\n\n//jsx表达式会被react转换成一个对象\n// var ele = React.createElement('div',{'id':'box'},'hello',React.createElement('h1',{'id':'h'},'react'));\n// console.log(ele);\n// var obj = {\n//     type :'div',\n//     props:{\n//         id:'box',\n//         children:['hello',{\n//             type :'h1',\n//             props:{\n//                 id:'h',\n//                 class:'h',\n//                 children:['react']\n//             }\n//         }]\n//     }\n// }\n\n//自己声明rander函数，实现页面渲染\n// function rander(obj,root){\n//     var {type,props} = obj;\n\n//     //文档碎片 - 优化形式\n//     var fr = document.createDocumentFragment();\n\n//     var ele = document.createElement(type);\n//     for(var item in obj.props){\n//         if(item === 'class'){\n//             ele.className = props[item];\n//         }else if(item === 'children'){\n//             for(var i = 0;i < props[item].length;i++){\n//                 if(typeof props[item][i] === 'object'){\n//                     rander(props[item][i],ele);\n//                 }else{\n//                     var txt = document.createTextNode(props[item][i]);\n//                     ele.appendChild(txt);\n//                 } \n//             }\n//         }else{\n//             ele[item] = props[item];\n//         }\n//     }\n//     fr.appendChild(ele);//碎片\n//     root.appendChild(fr);\n// }\n// rander(obj, document.getElementById('root'));\n\n\n\n//注意以下性能问题及优化方法\n\n// 加载html文件、浏览器解析html生成DOM树\n// link加载CSS文件、解析CSS规则、和DOM树生成render tree（渲染树）、浏览器的渲染引擎渲染render tree\n\n/**回流一定重绘，重绘不一定回流\n * \n * 页面回流(重排):内容改变/大小改变/结构改变\n * 页面重绘：样式更改/字体颜色背景颜色等 \n*/\n\n//1、node.offsetLeft、node.offsetWidth等慎用\n//   调用也会产生回流\n// var rt = document.getElementById('root');\n// var width = rt.offsetWidth;\n// setInterval(function(){\n//     width += 1;\n//     rt.style.width = width +'px';\n// },100);\n\n//2、声明一个css的一个类 [声明类 减少回流次数]\n// display、width、height、font-size等会引起页面回流\n// document.body.style.width = '100px';\n// document.body.style.height = '100px';\n// 声明一个css的一个类\n// .change{\n//      width: 100px;\n//      height: 100px;\n//  }\n// document.body.className = 'change';\n\n// 3、对节点的操作先用变量代替\n// console.time('a');\n// var str = '';\n// for(var i=0;i<1000;i++){\n//     str += '<li>'+i+'</li>';\n// }\n// document.body.innerHTML = str;\n// console.timeEnd('a');\n\n// 4、文档碎片的概念"],"sourceRoot":""}